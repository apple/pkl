facts {
  ["isEmpty"] {
    true
  }
  ["isBlank"] {
    true
    true
  }
  ["lastIndex"] {
    true
    true
  }
  ["base64Decoded"] {
    true
    true
  }
  ["contains()"] {
    true
    true
    true
    true
    true
  }
  ["matches()"] {
    true
    true
    true
  }
  ["startsWith()"] {
    true
    true
    true
    true
  }
  ["endsWith()"] {
    true
    true
  }
  ["isRegex"] {
    true
    true
  }
  ["isBase64"] {
    true
  }
  ["capitalize"] {
    true
    true
  }
  ["decapitalize"] {
    true
    true
  }
}
examples {
  ["length"] {
    7
  }
  ["indexOf()"] {
    2
    "String does not contain a match for literal pattern. String : \"😀😈😍😎😡🤢🤣\" Pattern: \"😍😎x\""
    2
    "String does not contain a match for regex pattern. String : \"😀😈😍😎😡🤢🤣\" Pattern: Regex(\".?😎x\")"
  }
  ["indexOfNull()"] {
    2
    null
    2
    null
  }
  ["reverse()"] {
    "🤣🤢😡😎😍😈😀"
  }
  ["lastIndexOf()"] {
    6
    "String does not contain a match for literal pattern. String : \"😀😈x😀😈y😀😈z\" Pattern: \"😍😎x\""
    6
    "String does not contain a match for regex pattern. String : \"😀😈x😀😈y😀😈z\" Pattern: Regex(\"😍😎x\")"
  }
  ["lastIndexOfOrNull()"] {
    6
    null
  }
  ["split()"] {
    List("😀", "😈😍😍😀", "😈😍😍")
    List("", "", "", "", "😍😍", "", "", "", "😍😍")
  }
  ["replaceAll()"] {
    "xx😈😈😍😍xx😈😈😍😍"
    "(😀😀😈|😀😀)😈😍😍(😀😀😈|😀😀)😈😍😍"
    "Error replacing matches for regex `[😀😈]` with `$4; no such group`: `No group 4`"
  }
  ["replaceFirst()"] {
    "xx😈😈😍😍😀😀😈😈😍😍"
    "(😀😀😈|😀😀)😈😍😍😀😀😈😈😍😍"
    "Error replacing matches for regex `[😀😈]` with `$4; no such group`: `No group 4`"
  }
  ["replaceLast()"] {
    "😀😀😈😈😍😍xx😈😈😍😍"
    "😀😀😈😈😍😍(😀😀😈|😀😀)😈😍😍"
    "Error replacing matches for regex `[😀😈]` with `$4; no such group`: `No group 4`"
  }
  ["replaceAllMapped()"] {
    "├😀😀┤😈😈😍😍├😀😀┤😈😈😍😍"
    "├😀😀😈┤😈😍😍├😀😀😈┤😈😍😍"
  }
  ["replaceFirstMapped()"] {
    "├😀😀┤😈😈😍😍😀😀😈😈😍😍"
    "├😀😀😈┤😈😍😍😀😀😈😈😍😍"
  }
  ["replaceLastMapped()"] {
    "😀😀😈😈😍😍├😀😀┤😈😈😍😍"
    "😀😀😈😈😍😍├😀😀😈┤😈😍😍"
  }
  ["replaceRange()"] {
    "😀😀😈😈😍├┤😍😍"
    "😀😀😈😈😍😍😀😀😈😈extend beyond 😀 string end"
    "Character index `100` is out of range `0`..`12`. String: \"😀😀😈😈😍😍😀😀😈😈😍😍\""
    "Character index `-10` is out of range `0`..`12`. String: \"😀😀😈😈😍😍😀😀😈😈😍😍\""
  }
  ["toUpperCase()"] {
    "😀😈😍"
  }
  ["toLowerCase()"] {
    "😀😈😍"
  }
  ["trim()"] {
    "😀😈😍😎😡🤢🤣"
  }
  ["trimStart()"] {
    """
    😀😈😍😎😡🤢🤣 \t

    """
  }
  ["trimEnd()"] {
    " \t 😀😈😍😎😡🤢🤣"
  }
  ["chars"] {
    List("😀", "😈", "😍", "😎", "😡", "🤢", "🤣")
  }
  ["codePoints"] {
    List(128512, 128520, 128525, 128526, 128545, 129314, 129315)
  }
  ["toInt()"] {
    "Cannot parse string as `Int`. String: \"😀😈😍\""
  }
  ["toIntOrNull()"] {
    null
    null
    null
  }
  ["toFloat()"] {
    "Cannot parse string as `Float`. String: \"😀😈😍\""
  }
  ["toFloatOrNull()"] {
    null
    null
    null
  }
  ["take()"] {
    ""
    "😀😈😍"
    "😀😈😍😎😡🤢🤣"
    "Expected a positive number, but got `-1`."
  }
  ["takeWhile()"] {
    "😀😈😍😎😡🤢🤣"
    ""
    "😀😈😍"
    "Expected value of type `Boolean`, but got type `Int`. Value: 42"
  }
  ["takeLast()"] {
    ""
    "😡🤢🤣"
    "😀😈😍😎😡🤢🤣"
    "Expected a positive number, but got `-1`."
  }
  ["takeLastWhile()"] {
    "😀😈😍😎😡🤢🤣"
    ""
    "😎😡🤢🤣"
    "Expected value of type `Boolean`, but got type `Int`. Value: 42"
  }
  ["drop()"] {
    "😀😈😍😎😡🤢🤣"
    "😎😡🤢🤣"
    ""
    "Expected a positive number, but got `-1`."
  }
  ["dropWhile()"] {
    ""
    "😀😈😍😎😡🤢🤣"
    "😎😡🤢🤣"
    "Expected value of type `Boolean`, but got type `Int`. Value: 42"
  }
  ["dropLast()"] {
    "😀😈😍😎😡🤢🤣"
    "😀😈😍😎"
    ""
    "Expected a positive number, but got `-1`."
  }
  ["dropLastWhile()"] {
    ""
    "😀😈😍😎😡🤢🤣"
    "😀😈😍"
    "Expected value of type `Boolean`, but got type `Int`. Value: 42"
  }
  ["substring()"] {
    ""
    "😍"
    "😍😎"
    "😀😈😍😎😡🤢🤣"
    "Character index `-1` is out of range `0`..`7`. String: \"😀😈😍😎😡🤢🤣\""
    "Character index `8` is out of range `1`..`7`. String: \"😀😈😍😎😡🤢🤣\""
    "Character index `2` is out of range `3`..`7`. String: \"😀😈😍😎😡🤢🤣\""
  }
  ["substringOrNull()"] {
    ""
    "😍"
    "😍😎"
    "😀😈😍😎😡🤢🤣"
    null
    null
    null
  }
  ["getOrNull()"] {
    null
    "😀"
    "😎"
    "🤣"
    null
  }
  ["toBoolean()"] {
    "Cannot parse string as `Boolean`. String: \"(😍😎😡\""
  }
  ["toBooleanOrNull()"] {
    null
  }
  ["repeat()"] {
    ""
    "😀😈😍😎😡🤢🤣"
    "😀😈😍😎😡🤢🤣😀😈😍😎😡🤢🤣😀😈😍😎😡🤢🤣😀😈😍😎😡🤢🤣😀😈😍😎😡🤢🤣"
  }
  ["sha1"] {
    "fe64c1726719d6304b22f0ac854a04cb7b373832"
    "3987530da5821ff2aa1068e129e7ee3e69dd5bb3"
  }
  ["sha256"] {
    "9bd74059a744bddbf99f9650ffb5eb5c0755651d33b376632373d2df924a1e05"
    "7e9d3b9f419d6ff2612363c435ad18a42ddf31fd79b86fc2d4a6efc7409829f6"
  }
  ["sha256Int"] {
    -2612856723257370725
    -977389688946188930
  }
  ["md5"] {
    "122538b378a210d6c8c6495aeb2ec242"
    "c243df28293aff5b792c244e0b998513"
  }
  ["base64"] {
    "8J+YgPCfmIjwn5iN8J+YjvCfmKHwn6Si8J+kow=="
    "8J+YjfCfmI7wn5ih"
  }
}
