package my

import java.util.Objects
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import org.pkl.core.Duration

object Mod {
  open class Foo(
    open val one: Long
  ) {
    open fun copy(one: Long = this.one): Foo = Foo(one)

    override fun equals(other: Any?): Boolean {
      if (this === other) return true
      if (this.javaClass != other?.javaClass) return false
      other as Foo
      if (this.one != other.one) return false
      return true
    }

    override fun hashCode(): Int {
      var result = 1
      result = 31 * result + Objects.hashCode(this.one)
      return result
    }

    override fun toString(): String = """Foo(one=$one)"""
  }

  open class None(
    one: Long
  ) : Foo(one) {
    open override fun copy(one: Long): None = None(one)

    override fun equals(other: Any?): Boolean {
      if (this === other) return true
      if (this.javaClass != other?.javaClass) return false
      other as None
      if (this.one != other.one) return false
      return true
    }

    override fun hashCode(): Int {
      var result = 1
      result = 31 * result + Objects.hashCode(this.one)
      return result
    }

    override fun toString(): String = """None(one=$one)"""
  }

  open class Bar(
    one: Long,
    open val two: String
  ) : None(one) {
    open fun copy(one: Long = this.one, two: String = this.two): Bar = Bar(one, two)

    open override fun copy(one: Long): Bar = Bar(one, two)

    override fun equals(other: Any?): Boolean {
      if (this === other) return true
      if (this.javaClass != other?.javaClass) return false
      other as Bar
      if (this.one != other.one) return false
      if (this.two != other.two) return false
      return true
    }

    override fun hashCode(): Int {
      var result = 1
      result = 31 * result + Objects.hashCode(this.one)
      result = 31 * result + Objects.hashCode(this.two)
      return result
    }

    override fun toString(): String = """Bar(one=$one, two=$two)"""
  }

  class Baz(
    one: Long,
    two: String,
    val three: Duration
  ) : Bar(one, two) {
    fun copy(
      one: Long = this.one,
      two: String = this.two,
      three: Duration = this.three
    ): Baz = Baz(one, two, three)

    override fun copy(one: Long, two: String): Baz = Baz(one, two, three)

    override fun copy(one: Long): Baz = Baz(one, two, three)

    override fun equals(other: Any?): Boolean {
      if (this === other) return true
      if (this.javaClass != other?.javaClass) return false
      other as Baz
      if (this.one != other.one) return false
      if (this.two != other.two) return false
      if (this.three != other.three) return false
      return true
    }

    override fun hashCode(): Int {
      var result = 1
      result = 31 * result + Objects.hashCode(this.one)
      result = 31 * result + Objects.hashCode(this.two)
      result = 31 * result + Objects.hashCode(this.three)
      return result
    }

    override fun toString(): String = """Baz(one=$one, two=$two, three=$three)"""
  }
}
